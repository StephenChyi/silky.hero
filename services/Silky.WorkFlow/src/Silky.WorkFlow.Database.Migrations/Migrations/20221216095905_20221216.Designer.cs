// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Silky.WorkFlow.EntityFrameworkCore.DbContexts;

#nullable disable

namespace Silky.WorkFlow.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20221216095905_20221216")]
    partial class _20221216
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Silky.WorkFlow.Domain.BusinessCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("BusinessCode");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("BusinessName");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BusinessCategory", (string)null);
                });

            modelBuilder.Entity("Silky.WorkFlow.Domain.FlowNode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("BusinessCode");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlowNodeCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("FlowNodeCode");

                    b.Property<string>("FlowNodeName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("FlowNodeName");

                    b.Property<int>("NodeType")
                        .HasColumnType("int")
                        .HasColumnName("NodeType");

                    b.Property<string>("NodeValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeValue");

                    b.Property<string>("NodeVariable")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeVariable");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("FlowNode", (string)null);
                });

            modelBuilder.Entity("Silky.WorkFlow.Domain.NodeActionResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("BusinessCode");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlowNodeCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("FlowNodeCode");

                    b.Property<long>("FlowNodeId")
                        .HasColumnType("bigint")
                        .HasColumnName("FlowNodeId");

                    b.Property<string>("NextFlowNodeCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NextFlowNodeCode");

                    b.Property<string>("NextFlowNodeId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NextFlowNodeId");

                    b.Property<int>("NodeAction")
                        .HasColumnType("int")
                        .HasColumnName("NodeAction");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FlowNodeId");

                    b.ToTable("NodeActionResult", (string)null);
                });

            modelBuilder.Entity("Silky.WorkFlow.Domain.WorkFlow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint")
                        .HasColumnName("ActivityId");

                    b.Property<string>("BusinessCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("BusinessCode");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("NextId")
                        .HasColumnType("bigint")
                        .HasColumnName("NextId");

                    b.Property<int>("NodeAction")
                        .HasColumnType("int")
                        .HasColumnName("NodeAction");

                    b.Property<string>("NodeCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeCode");

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeName");

                    b.Property<int>("NodeType")
                        .HasColumnType("int")
                        .HasColumnName("NodeType");

                    b.Property<string>("NodeValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeValue");

                    b.Property<string>("NodeVariable")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("NodeVariable");

                    b.Property<long>("PreviousId")
                        .HasColumnType("bigint")
                        .HasColumnName("PreviousId");

                    b.Property<long>("ProofId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProofId");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("WorkFlow", (string)null);
                });

            modelBuilder.Entity("Silky.WorkFlow.Domain.NodeActionResult", b =>
                {
                    b.HasOne("Silky.WorkFlow.Domain.FlowNode", "FlowNode")
                        .WithMany("NextFlowNodes")
                        .HasForeignKey("FlowNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowNode");
                });

            modelBuilder.Entity("Silky.WorkFlow.Domain.FlowNode", b =>
                {
                    b.Navigation("NextFlowNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
